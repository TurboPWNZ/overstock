<?php

class Api
{
    private static $_chatId;

    private static $_responseMessage;
    private static $_keyboard;

    public static function processRequest()
    {
        // ====== –ü–û–õ–£–ß–ê–ï–ú –í–•–û–î–Ø–©–ò–ï –î–ê–ù–ù–´–ï ======
        $content = file_get_contents("php://input");

        $update = json_decode($content, true);

        if (isset($update["message"])) {
            self::$_chatId = $update["message"]["chat"]["id"];
            $text = trim($update["message"]["text"]);


            self::processAction($text);

            return [
                'chatId' => self::$_chatId,
                'responseMessage' => self::$_responseMessage,
                'keyboard' => self::$_keyboard
            ];
        }

        return false;
    }

    private static function processAction($action)
    {
        if ($action == "/start") {
            self::$_responseMessage = "–ü—Ä–∏–≤–µ—Ç! üëã –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?";
            self::$_keyboard = [
                "inline_keyboard" => [
                    [
                        ["text" => "üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", "callback_data" => "/publish"],
                        ["text" => "‚ùå –£–¥–∞–ª–∏—Ç—å", "callback_data" => "/delete"]
                    ]
                ]
            ];
        } elseif ($action == "1" || stripos($action, "–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å") !== false) {
            self::$_responseMessage = "–û–∫–µ–π, –ø—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è ‚úçÔ∏è";
        } elseif ($action == "2" || stripos($action, "—É–¥–∞–ª–∏—Ç—å") !== false) {
            self::$_responseMessage = "–ü—Ä–∏—à–ª–∏ ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å ‚ùå";
        } else {
            self::$_responseMessage = "–ù–µ –ø–æ–Ω—è–ª üòÖ –ù–∞–ø–∏—à–∏ /start";
        }
    }
}